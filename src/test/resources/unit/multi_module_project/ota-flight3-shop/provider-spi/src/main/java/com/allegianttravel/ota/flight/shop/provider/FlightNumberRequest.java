/*
 *
 *  * Copyright (C) 2017 Allegiant Travel Company - All Rights Reserved
 *  *
 *  * This file is subject to the terms and conditions defined in
 *  * file 'LICENSE.txt', which is part of this source code package.
 *
 *
 */

package com.allegianttravel.ota.flight.shop.provider;

import com.allegianttravel.ota.flight.shop.rest.FareRuleType;
import com.allegianttravel.ota.flight.shop.rest.dto.PassengerTypeCount;
import com.allegianttravel.ota.flight.shop.rest.dto.travel.FlightNumber;
import org.apache.commons.lang3.StringUtils;

import javax.annotation.Generated;
import java.time.LocalDate;
import java.util.Collections;
import java.util.List;
import java.util.Optional;

public class FlightNumberRequest extends AbstractFlightShopRequestProviderInput implements FlightShopRequestProviderInput {
    private final LocalDate departDate;
    private final int channelId;
    private final List<PassengerTypeCount> passengers;
    private final String bookingType;
    private final LocalDate bookingDate;
    private final List<String> couponCodes;
    private final CallerMetadata callerMetadata;
    private final FlightNumber flightNumber;
    private final String fareClass;
    private final String namedFare;
    private final FareRuleType fareRuleType;

    FlightNumberRequest(Builder builder) {
        this.departDate = builder.getDepartDate();
        this.channelId = builder.getChannelId();
        this.passengers = Collections.unmodifiableList(builder.getPassengers());
        this.bookingType = builder.getBookingType();
        this.bookingDate = builder.getBookingDate() == null ? LocalDate.now() : builder.getBookingDate();
        this.couponCodes = builder.getCouponCodes() == null ? Collections.emptyList() :
                Collections.unmodifiableList(builder.getCouponCodes());
        this.callerMetadata = builder.getCallerMetadata();
        this.fareClass = builder.getFareClass();
        this.flightNumber = builder.getFlightNumber();
        this.namedFare = StringUtils.isNotEmpty(builder.getNamedFare()) ? builder.getNamedFare() : null;
        this.fareRuleType = builder.getFareRuleType();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlightNumberRequest request) {
        return new Builder()
                .setDepartDate(request.getDepartDate())
                .setChannelId(request.getChannelId())
                .setPassengers(request.getPassengers())
                .setBookingType(request.getBookingType())
                .setBookingDate(request.getBookingDate())
                .setCouponCodes(request.getCouponCodes())
                .setCallerMetadata(request.getCallerMetadata())
                .setFareClass(request.getFareClass())
                .setFlightNumber(request.getFlightNumber());
    }

    public static class Builder {
        private LocalDate departDate;
        private int channelId;
        private List<PassengerTypeCount> passengers = Collections.emptyList();
        private String bookingType;
        private LocalDate bookingDate;
        private List<String> couponCodes;
        private CallerMetadata callerMetadata;
        private FlightNumber flightNumber;
        private String fareClass;
        private String namedFare;
        private FareRuleType fareRuleType;

        public FlightNumberRequest build() {
            return new FlightNumberRequest(this);
        }

        @Generated("Generated by IDE")
        public LocalDate getDepartDate() {
            return departDate;
        }

        @Generated("Generated by IDE")
        public Builder setDepartDate(LocalDate departDate) {
            this.departDate = departDate;
            return this;
        }

        @Generated("by IDE")
        public int getChannelId() {
            return channelId;
        }

        @Generated("by IDE")
        public Builder setChannelId(int channelId) {
            this.channelId = channelId;
            return this;
        }

        @Generated("Generated by IDE")
        public List<PassengerTypeCount> getPassengers() {
            return passengers;
        }

        @Generated("Generated by IDE")
        public Builder setPassengers(List<PassengerTypeCount> passengers) {
            this.passengers = passengers;
            return this;
        }

        @Generated("Generated by IDE")
        public String getBookingType() {
            return bookingType;
        }

        @Generated("Generated by IDE")
        public Builder setBookingType(String bookingType) {
            this.bookingType = bookingType;
            return this;
        }

        @Generated("Generated by IDE")
        public LocalDate getBookingDate() {
            return bookingDate;
        }

        @Generated("Generated by IDE")
        public Builder setBookingDate(LocalDate bookingDate) {
            this.bookingDate = bookingDate;
            return this;
        }

        @Generated("Generated by IDE")
        public List<String> getCouponCodes() {
            return couponCodes;
        }

        @Generated("Generated by IDE")
        public Builder setCouponCodes(List<String> couponCodes) {
            this.couponCodes = couponCodes;
            return this;
        }

        @Generated("Generated by IDE")
        public CallerMetadata getCallerMetadata() {
            return callerMetadata;
        }

        @Generated("Generated by IDE")
        public Builder setCallerMetadata(CallerMetadata callerMetadata) {
            this.callerMetadata = callerMetadata;
            return this;
        }

        @Generated("by IDE")
        public FlightNumber getFlightNumber() {
            return flightNumber;
        }

        @Generated("by IDE")
        public Builder setFlightNumber(FlightNumber flightNumber) {
            this.flightNumber = flightNumber;
            return this;
        }

        @Generated("by IDE")
        public String getFareClass() {
            return fareClass;
        }

        @Generated("by IDE")
        public Builder setFareClass(String fareClass) {
            this.fareClass = fareClass;
            return this;
        }

        @Generated("by IDE")
        public String getNamedFare() {
            return namedFare;
        }

        @Generated("by IDE")
        public Builder setNamedFare(String namedFare) {
            this.namedFare = namedFare;
            return this;
        }

        @Generated("by IDE")
        public FareRuleType getFareRuleType() {
            return fareRuleType;
        }

        @Generated("by IDE")
        public Builder setFareRuleType(FareRuleType fareRuleType) {
            this.fareRuleType = fareRuleType;
            return this;
        }
    }

    @Generated("Generated by IDE")
    public LocalDate getDepartDate() {
        return departDate;
    }

    @Generated("by IDE")
    public int getChannelId() {
        return channelId;
    }

    @Override
    @Generated("Generated by IDE")
    public List<PassengerTypeCount> getPassengers() {
        return passengers;
    }

    @Generated("Generated by IDE")
    public String getBookingType() {
        return bookingType;
    }

    @Generated("Generated by IDE")
    public LocalDate getBookingDate() {
        return bookingDate;
    }

    @Generated("Generated by IDE")
    public List<String> getCouponCodes() {
        return couponCodes;
    }

    @Generated("Generated by IDE")
    public CallerMetadata getCallerMetadata() {
        return callerMetadata;
    }

    @Generated("by IDE")
    public FlightNumber getFlightNumber() {
        return flightNumber;
    }

    @Generated("by IDE")
    public String getFareClass() {
        return fareClass;
    }

    public Optional<String> getNamedFare() {
        return Optional.ofNullable(namedFare);
    }

    @Generated("by IDE")
    public FareRuleType getFareRuleType() {
        return fareRuleType;
    }
}
